# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

###################################################################################
#                                                                                 #
#  DoctorKafka global settings, including the zookeeper url for kafkastats topic  #
#                                                                                 #
###################################################################################
# [required] zookeeper quorum for storing doctorkafka metadata
doctorkafka.zkurl=zookeeper001:2181,zookeeper002:2181,zookeeper003:2181

# [required] doctorkafka web port
doctorkafka.web.port=8080

# [optional] disable doctorkafka service restart
doctorkafka.restart.disabled=false

# [required] doctorkafka service restart interval
doctorkafka.restart.interval.seconds=86400

# [optional] ostrich port #
doctorkafka.ostrich.port=2052

# [optional] tsd host and port.
doctorkafka.tsd.hostport=localhost:18621

# [optional] brokerstats.version
doctorkafka.brokerstats.version=0.2.4.7

# [required] zookeeper connection string for `kafkastats` topic
doctorkafka.brokerstats.zkurl=zookeeper001:2181,zookeeper002:2181,zookeeper003:2181/cluster1
# [required] kafka topic name for kafkastats
doctorkafka.brokerstats.topic=brokerstats
# [required] the time window that doctorkafka uses to compute
doctorkafka.brokerstats.backtrack.seconds=86400
# [optional] ssl related setting for the kafka cluster that hosts brokerstats
# can PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL
doctorkafka.brokerstats.consumer.security.protocol=SSL
doctorkafka.brokerstats.consumer.ssl.client.auth=required
doctorkafka.brokerstats.consumer.ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1
doctorkafka.brokerstats.consumer.ssl.endpoint.identification.algorithm=HTTPS
doctorkafka.brokerstats.consumer.ssl.key.password=key_password
doctorkafka.brokerstats.consumer.ssl.keystore.location=keystore_path
doctorkafka.brokerstats.consumer.ssl.keystore.password=keystore_password
doctorkafka.brokerstats.consumer.ssl.keystore.type=JKS
doctorkafka.brokerstats.consumer.ssl.secure.random.implementation=SHA1PRNG
doctorkafka.brokerstats.consumer.ssl.truststore.location=truststore_path
doctorkafka.brokerstats.consumer.ssl.truststore.password=truststore_password
doctorkafka.brokerstats.consumer.ssl.truststore.type=JKS

## default enabled monitors, in evaluation order
doctorkafka.enabled.monitors=interval_timer,maintenance_mode,no_stats_broker_monitor,dead_broker_monitor,urp_monitor
doctorkafka.enabled.operators=broker_replacer,no_stats_brokers_operator,urp_reassignor
doctorkafka.enabled.actions=reassign_partitions,replace_instance,report_operation,send_email,snoozed_send_email

# monitor module configs

## monitor specific configs, set up based on your enabled modules
## for each module enabled, the config follows the pattern:
## [required]
## doctorkafka.monitors.<module name>.class=<module classpath>
## [optional]
## doctorkafka.monitors.<module name>.config.<config1>=<value1>
## doctorkafka.monitors.<module name>.config.<config2>=<value2>
## doctorkafka.monitors.<module name>.config.<config2>.<subconfig1>=<value2>
## ...

## Interval timer
###
doctorkafka.monitors.interval_timer.class=com.pinterest.doctorkafka.modules.monitor.IntervalTimer
doctorkafka.monitors.interval_timer.config.interval.seconds=5

## Maintenance mode checker
doctorkafka.monitors.maintenance_mode.class=com.pinterest.doctorkafka.modules.monitor.cluster.MaintenanceChecker

## Dead broker monitor
doctorkafka.monitors.dead_broker_monitor.class=com.pinterest.doctorkafka.modules.monitor.cluster.kafka.DeadBrokerMonitor
doctorkafka.monitors.dead_broker_monitor.config.no_stats.seconds=600

## No stats broker monitor
doctorkafka.monitors.no_stats_broker_monitor.class=com.pinterest.doctorkafka.modules.monitor.cluster.kafka.NoStatsBrokerMonitor

## URP monitor
doctorkafka.monitors.urp_monitor.class=com.pinterest.doctorkafka.modules.monitor.cluster.kafka.URPMonitor

# default plugins if no plugins are specified for a cluster. Plugins will be evaluated in the same order as listed


# operator configs
## BrokerReplacer config
### [optional]
doctorkafka.operators.broker_replacer.config.replacement.cooldown.seconds=43200

## NoStatsBrokerOperator config
### currently no configs

## URPReassignor config
### [required]
# please override per cluster based on fleet capacity
doctorkafka.operators.urp_reassignor.config.network.bandwidth.max.mb=200
### [optional]
doctorkafka.operators.urp_reassignor.config.rack.awareness.enabled=false
doctorkafka.operators.urp_reassignor.config.prolong.urp.alert.seconds=7200


# action module configs
#
# actions will listen to subscribed events and act whenever it receives an event
#
# actions are in dry run mode by default
# disable dry run mode by setting dryrun=false explicitly

## report_operation action
### [required]
doctorkafka.actions.report_operation.class=com.pinterest.doctorkafka.modules.action.KafkaReportOperation
doctorkafka.actions.report_operation.config.subscribed.events=report_operation
doctorkafka.actions.report_operation.config.topic=operator_report
doctorkafka.actions.report_operation.config.zkurl=zookeeper001:2181,zookeeper002:2181,zookeeper003:2181/cluster1
### [optional]
doctorkafka.actions.report_operation.config.dryrun=true
doctorkafka.actions.report_operation.config.producer.security.protocol=SSL
doctorkafka.actions.report_operation.config.producer.ssl.client.auth=required
doctorkafka.actions.report_operation.config.producer.ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1
doctorkafka.actions.report_operation.config.producer.ssl.endpoint.identification.algorithm=HTTPS
doctorkafka.actions.report_operation.config.producer.ssl.key.password=key_password
doctorkafka.actions.report_operation.config.producer.ssl.keystore.location=keystore_path
doctorkafka.actions.report_operation.config.producer.ssl.keystore.password=keystore_password
doctorkafka.actions.report_operation.config.producer.ssl.keystore.type=JKS
doctorkafka.actions.report_operation.config.producer.ssl.secure.random.implementation=SHA1PRNG
doctorkafka.actions.report_operation.config.producer.ssl.truststore.location=truststore_path
doctorkafka.actions.report_operation.config.producer.ssl.truststore.password=truststore_password
doctorkafka.actions.report_operation.config.producer.ssl.truststore.type=JKS

## replace_instance action
### [required]
doctorkafka.actions.replace_instance.class=com.pinterest.doctorkafka.modules.action.cluster.ScriptReplaceInstance
doctorkafka.actions.replace_instance.config.subscribed.events=replace_instance
doctorkafka.actions.replace_instance.config.script="replace-script.sh "
### [optional]
doctorkafka.actions.replace_instance.config.dryrun=true
doctorkafka.actions.replace_instance.config.prolong.replacement.alert.seconds=1800

## reassign_partitions action
### [required]
doctorkafka.actions.reassign_partitions.class=com.pinterest.doctorkafka.modules.action.cluster.kafka.ZkUtilReassignPartition
doctorkafka.actions.reassign_partitions.config.subscribe.events=reassign_partitions
### [optional]
doctorkafka.actions.reassign_partitions.config.dryrun=true

## send_email action
### [required]
doctorkafka.actions.send_email.class=com.pinterest.doctorkafka.modules.action.SendEmail
doctorkafka.actions.send_email.config.subscribed.events=notify_replacement,notify_reassignment,notify_maintenance_mode,notify_decommission
doctorkafka.actions.send_email.config.emails=foo@email.com,bar@email.com
### [optional]
doctorkafka.actions.send_email.config.dryrun=true

## snoozed_send_email action
### [required]
doctorkafka.actions.snoozed_send_email.class=com.pinterest.doctorkafka.modules.action.SnoozedSendEmail
doctorkafka.actions.snoozed_send_email.config.subscribed.events=notify_prolong_replacement,alert_no_stats_brokers,alert_urp_handling_failure,alert_prolong_urp
doctorkafka.actions.snoozed_send_email.config.emails=foo@email.com,bar@email.com
### [optional]
doctorkafka.actions.snoozed_send_email.config.dryrun=true
doctorkafka.actions.snoozed_send_email.config.snooze.seconds=1200

################################################################################
#                                                                              #
#  Settings for managed kafka clusters.                                        #
#                                                                              #
################################################################################

# cluster1 settings

# [required] zookeeper url for the kafka cluster
kafkacluster.cluster1.zkurl=zookeeper001:2181,zookeeper002:2181,zookeeper003:2181/cluster1

# [required] the network-inbound limit in megabytes
kafkacluster.cluster1.network.inbound.limit.mb=35

# [required] the network-outbound limit in megabytes
kafkacluster.cluster1.network.outbound.limit.mb=80

# [optional] cluster specific plugin configurations, overrides default settings
kafkacluster.cluster1.monitors.urp_monitor.prolong.alert.seconds=3600
kafkacluster.cluster1.monitors.urp_monitor.consumer.security.protocol=SSL
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.client.auth=required
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.enabled.protocols=TLSv1.2,TLSv1.1,TLSv1
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.endpoint.identification.algorithm=HTTPS
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.key.password=key_password
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.keystore.location=keystore_path
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.keystore.password=keystore_password
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.keystore.type=JKS
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.secure.random.implementation=SHA1PRNG
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.truststore.location=truststore_path
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.truststore.password=truststore_password
kafkacluster.cluster1.monitors.urp_monitor.consumer.ssl.truststore.type=JKS
kafkacluster.cluster1.monitors.urp_monitor.network.bandwidth.max.mb=150

## actions are in dry run mode by default

kafkacluster.cluster1.actions.report_operation.config.dryrun=false
kafkacluster.cluster1.actions.replace_instance.config.dryrun=false
kafkacluster.cluster1.actions.reassign_partitions.config.dryrun=false
kafkacluster.cluster1.actions.send_email.config.dryrun=false
kafkacluster.cluster1.actions.snoozed_send_email.config.dryrun=false


# cluster2 settings

kafkacluster.cluster2.zkurl=zookeeper001:2181,zookeeper002:2181,zookeeper003:2181/cluster2
kafkacluster.cluster2.network.inbound.limit.mb=35
kafkacluster.cluster2.network.outbound.limit.mb=80

## cluster-specific enabled plugins
kafkacluster.cluster2.enabled_monitors=interval_timer,no_stats_broker_monitor,dead_broker_monitor,urp_monitor
kafkacluster.cluster2.operators.urp_reassignor.config.rack.awareness.enabled=false
kafkacluster.cluster2.operators.urp_reassignor.config.network.bandwidth.max.mb=150
